apiVersion: v1
kind: Pod
metadata:
  annotations:
    k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.1.184/23"],"mac_address":"0a:58:0a:80:01:b8","gateway_ips":["10.128.0.1"[],"ip_address":"10.128.1.184/23","gateway_ip":"10.128.0.1"}}'
    k8s.v1.cni.cncf.io/network-status: |-
      [{
          "name": "ovn-kubernetes",
          "interface": "eth0",
          "ips": [
              "10.128.1.184"
          ],
          "mac": "0a:58:0a:80:01:b8",
          "default": true,
          "dns": {}
      }]
    openshift.io/scc: restricted-v2
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
    serving.knative.dev/creator: system:admin
  creationTimestamp: "2023-07-12T12:47:16Z"
  generateName: timeout-00001-deployment-6585cc98c-
  labels:
    app: timeout-00001
    pod-template-hash: 6585cc98c
    serving.knative.dev/configuration: timeout
    serving.knative.dev/configurationGeneration: "1"
    serving.knative.dev/configurationUID: 94d1c226-0092-4cde-bd7e-e07c3dbf5f3a
    serving.knative.dev/revision: timeout-00001
    serving.knative.dev/revisionUID: d01e76f6-6874-4a51-920e-40b510611733
    serving.knative.dev/service: timeout
    serving.knative.dev/serviceUID: 2e6c0cda-7fe7-4ed3-88da-ca2d483797d8
  name: timeout-00001-deployment-6585cc98c-v86qg
  namespace: test
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: timeout-00001-deployment-6585cc98c
      uid: a15f1cf4-fafd-45fd-b5a9-fbb879e1217b
  resourceVersion: "834069"
  uid: a7c409bb-aab4-434a-a57e-ab32a66f22c5
spec:
  containers:
    - env:
        - name: PORT
          value: "8080"
        - name: K_REVISION
          value: timeout-00001
        - name: K_CONFIGURATION
          value: timeout
        - name: K_SERVICE
          value: timeout
      image: quay.io/rlehmann/timeout.go@sha256:46b0db3d865ef26d076c3773ec740d4aa39629ebafbc0345e7790ec52554a619
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          httpGet:
            path: /wait-for-drain
            port: 8022
            scheme: HTTP
      name: user-container
      ports:
        - containerPort: 8080
          name: user-port
          protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        runAsNonRoot: true
        runAsUser: 1001230000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-s5tx9
          readOnly: true
    - env:
        - name: SERVING_NAMESPACE
          value: test
        - name: SERVING_SERVICE
          value: timeout
        - name: SERVING_CONFIGURATION
          value: timeout
        - name: SERVING_REVISION
          value: timeout-00001
        - name: QUEUE_SERVING_PORT
          value: "8012"
        - name: QUEUE_SERVING_TLS_PORT
          value: "8112"
        - name: CONTAINER_CONCURRENCY
          value: "0"
        - name: REVISION_TIMEOUT_SECONDS
          value: "300"
        - name: REVISION_RESPONSE_START_TIMEOUT_SECONDS
          value: "0"
        - name: REVISION_IDLE_TIMEOUT_SECONDS
          value: "0"
        - name: SERVING_POD
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: SERVING_POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: SERVING_LOGGING_CONFIG
        - name: SERVING_LOGGING_LEVEL
        - name: SERVING_REQUEST_LOG_TEMPLATE
          value: '{"httpRequest": {"requestMethod": "{{.Request.Method}}", "requestUrl":
        "{{js .Request.RequestURI}}", "requestSize": "{{.Request.ContentLength}}",
        "status": {{.Response.Code}}, "responseSize": "{{.Response.Size}}", "userAgent":
        "{{js .Request.UserAgent}}", "remoteIp": "{{js .Request.RemoteAddr}}", "serverIp":
        "{{.Revision.PodIP}}", "referer": "{{js .Request.Referer}}", "latency": "{{.Response.Latency}}s",
        "protocol": "{{.Request.Proto}}"}, "traceId": "{{index .Request.Header "X-B3-Traceid"}}"}'
        - name: SERVING_ENABLE_REQUEST_LOG
          value: "false"
        - name: SERVING_REQUEST_METRICS_BACKEND
          value: prometheus
        - name: TRACING_CONFIG_BACKEND
          value: none
        - name: TRACING_CONFIG_ZIPKIN_ENDPOINT
        - name: TRACING_CONFIG_DEBUG
          value: "false"
        - name: TRACING_CONFIG_SAMPLE_RATE
          value: "0.1"
        - name: USER_PORT
          value: "8080"
        - name: SYSTEM_NAMESPACE
          value: knative-serving
        - name: METRICS_DOMAIN
          value: knative.dev/internal/serving
        - name: SERVING_READINESS_PROBE
          value: '{"tcpSocket":{"port":8080,"host":"127.0.0.1"},"successThreshold":1}'
        - name: ENABLE_PROFILING
          value: "false"
        - name: SERVING_ENABLE_PROBE_REQUEST_LOG
          value: "false"
        - name: METRICS_COLLECTOR_ADDRESS
        - name: CONCURRENCY_STATE_ENDPOINT
        - name: CONCURRENCY_STATE_TOKEN_PATH
          value: /var/run/secrets/tokens/state-token
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: ENABLE_HTTP2_AUTO_DETECTION
          value: "false"
        - name: ROOT_CA
      image: registry.ci.openshift.org/openshift/knative-serving-queue:knative-v1.9
      imagePullPolicy: IfNotPresent
      name: queue-proxy
      ports:
        - containerPort: 8022
          name: http-queueadm
          protocol: TCP
        - containerPort: 9090
          name: http-autometric
          protocol: TCP
        - containerPort: 9091
          name: http-usermetric
          protocol: TCP
        - containerPort: 8012
          name: queue-port
          protocol: TCP
        - containerPort: 8112
          name: https-port
          protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          httpHeaders:
            - name: K-Network-Probe
              value: queue
          path: /
          port: 8012
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 25m
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1001230000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-s5tx9
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: false
  imagePullSecrets:
    - name: default-dockercfg-flbnd
  nodeName: sno
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1001230000
    seLinuxOptions:
      level: s0:c35,c20
    seccompProfile:
      type: RuntimeDefault
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 300
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
  volumes:
    - name: kube-api-access-s5tx9
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
          - configMap:
              items:
                - key: service-ca.crt
                  path: service-ca.crt
              name: openshift-service-ca.crt
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-07-12T12:47:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-07-12T12:47:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-07-12T12:47:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-07-12T12:47:16Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - containerID: cri-o://e5dfa85c0eef047af00d6f0f1d2b9d98dcdcc62ad567362e7bbcc19dbd46e9db
      image: registry.ci.openshift.org/openshift/knative-serving-queue:knative-v1.9
      imageID: registry.ci.openshift.org/openshift/knative-serving-queue@sha256:45afc7fe956d137680c8616e41168d99afe652d41dbca3900bacb3bd08c80af5
      lastState: {}
      name: queue-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-07-12T12:47:17Z"
    - containerID: cri-o://ccd41dc2425f0751fb7757a31d62adb947918de51537a5c29420b018a5a3e21f
      image: quay.io/rlehmann/timeout.go@sha256:46b0db3d865ef26d076c3773ec740d4aa39629ebafbc0345e7790ec52554a619
      imageID: quay.io/rlehmann/timeout.go@sha256:46b0db3d865ef26d076c3773ec740d4aa39629ebafbc0345e7790ec52554a619
      lastState: {}
      name: user-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-07-12T12:47:17Z"
  hostIP: 192.168.122.50
  phase: Running
  podIP: 10.128.1.184
  podIPs:
    - ip: 10.128.1.184
  qosClass: Burstable
  startTime: "2023-07-12T12:47:16Z"
